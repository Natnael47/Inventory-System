
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.2.1
 * Query Engine version: 4123509d24aa4dede1e864b46351bf2790323b69
 */
Prisma.prismaVersion = {
  client: "6.2.1",
  engine: "4123509d24aa4dede1e864b46351bf2790323b69"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.InventoryScalarFieldEnum = {
  Inventory_Id: 'Inventory_Id',
  Product_Name: 'Product_Name',
  Product_Category: 'Product_Category',
  Product_Description: 'Product_Description',
  Is_Discontinued: 'Is_Discontinued',
  Stock_Quantity: 'Stock_Quantity',
  Reorder_Threshold: 'Reorder_Threshold',
  Total_Value: 'Total_Value',
  Unit_Of_Measurement: 'Unit_Of_Measurement',
  Unit_Price: 'Unit_Price',
  Stock_Status: 'Stock_Status',
  Storage_Location: 'Storage_Location',
  Expiry_Date: 'Expiry_Date',
  Initial_Stock_Quantity: 'Initial_Stock_Quantity',
  Supplier_Id: 'Supplier_Id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WithdrawalLogScalarFieldEnum = {
  WithdrawalLog_Id: 'WithdrawalLog_Id',
  Inventory_Id: 'Inventory_Id',
  Employee_Id: 'Employee_Id',
  Withdrawal_Reason: 'Withdrawal_Reason',
  Quantity_Withdrawn: 'Quantity_Withdrawn',
  Date_Withdrawn: 'Date_Withdrawn',
  updatedAt: 'updatedAt'
};

exports.Prisma.InventoryPurchaseScalarFieldEnum = {
  Purchase_Id: 'Purchase_Id',
  Inventory_Id: 'Inventory_Id',
  Employee_Id: 'Employee_Id',
  Supplier_Id: 'Supplier_Id',
  Purchase_Date: 'Purchase_Date',
  Quantity_Purchased: 'Quantity_Purchased',
  Total_Cost: 'Total_Cost',
  Unit_Price: 'Unit_Price',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StockBatchScalarFieldEnum = {
  StockBatch_Id: 'StockBatch_Id',
  Batch_Number: 'Batch_Number',
  Inventory_Id: 'Inventory_Id',
  Supplier_Id: 'Supplier_Id',
  Purchase_Date: 'Purchase_Date',
  Quantity_Purchased: 'Quantity_Purchased',
  Unit_Price: 'Unit_Price',
  Expiry_Date: 'Expiry_Date',
  Remaining_Quantity: 'Remaining_Quantity',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SupplierScalarFieldEnum = {
  Supplier_Id: 'Supplier_Id',
  Supplier_Name: 'Supplier_Name',
  Contact_Name: 'Contact_Name',
  Contact_Phone_Number: 'Contact_Phone_Number',
  Contact_Email: 'Contact_Email',
  Notes: 'Notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmployeeScalarFieldEnum = {
  Employee_Id: 'Employee_Id',
  First_Name: 'First_Name',
  Last_Name: 'Last_Name',
  Gender: 'Gender',
  Email: 'Email',
  Password: 'Password',
  Profile_Image: 'Profile_Image',
  Phone_Number: 'Phone_Number',
  Job_Position: 'Job_Position',
  Work_Shift: 'Work_Shift',
  Education_Details: 'Education_Details',
  Work_Experience: 'Work_Experience',
  Monthly_Salary: 'Monthly_Salary',
  Address: 'Address',
  About_Employee: 'About_Employee',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WorkLogScalarFieldEnum = {
  WorkLog_Id: 'WorkLog_Id',
  Employee_Id: 'Employee_Id',
  Login_Time: 'Login_Time',
  Logout_Time: 'Logout_Time'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.InventoryOrderByRelevanceFieldEnum = {
  Product_Name: 'Product_Name',
  Product_Category: 'Product_Category',
  Product_Description: 'Product_Description',
  Unit_Of_Measurement: 'Unit_Of_Measurement',
  Stock_Status: 'Stock_Status',
  Storage_Location: 'Storage_Location'
};

exports.Prisma.WithdrawalLogOrderByRelevanceFieldEnum = {
  Withdrawal_Reason: 'Withdrawal_Reason'
};

exports.Prisma.StockBatchOrderByRelevanceFieldEnum = {
  Batch_Number: 'Batch_Number'
};

exports.Prisma.SupplierOrderByRelevanceFieldEnum = {
  Supplier_Name: 'Supplier_Name',
  Contact_Name: 'Contact_Name',
  Contact_Phone_Number: 'Contact_Phone_Number',
  Contact_Email: 'Contact_Email',
  Notes: 'Notes'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.EmployeeOrderByRelevanceFieldEnum = {
  First_Name: 'First_Name',
  Last_Name: 'Last_Name',
  Gender: 'Gender',
  Email: 'Email',
  Password: 'Password',
  Profile_Image: 'Profile_Image',
  Phone_Number: 'Phone_Number',
  Job_Position: 'Job_Position',
  Work_Shift: 'Work_Shift',
  Education_Details: 'Education_Details',
  Work_Experience: 'Work_Experience',
  About_Employee: 'About_Employee'
};


exports.Prisma.ModelName = {
  Inventory: 'Inventory',
  WithdrawalLog: 'WithdrawalLog',
  InventoryPurchase: 'InventoryPurchase',
  StockBatch: 'StockBatch',
  Supplier: 'Supplier',
  Employee: 'Employee',
  WorkLog: 'WorkLog'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
